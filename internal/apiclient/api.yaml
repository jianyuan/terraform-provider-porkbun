openapi: 3.0.0
info:
  title: Porkbun API
  version: 1.0.0
servers:
  - url: https://api.porkbun.com/api/json
    description: Porkbun API
    variables: {}
paths:
  /v3/domain/updateNs/{domain}:
    post:
      operationId: domainUpdateNameServers
      parameters:
        - $ref: "#/components/parameters/domainPath"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ApiKeyAndSecretKey"
                - type: object
                  required:
                    - ns
                  properties:
                    ns:
                      type: array
                      items:
                        type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
  /v3/domain/getNs/{domain}:
    post:
      operationId: domainGetNameServers
      parameters:
        - $ref: "#/components/parameters/domainPath"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyAndSecretKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainGetNameServersResponse"
  /v3/domain/listAll:
    post:
      operationId: domainListAll
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - apikey
                - secretapikey
              properties:
                apikey:
                  type: string
                secretapikey:
                  type: string
                start:
                  type: integer
                includeLabels:
                  type: string
                  enum:
                    - "yes"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainListAllResponse"
  /v3/dns/create/{domain}:
    post:
      operationId: dnsCreateRecord
      parameters:
        - $ref: "#/components/parameters/domainPath"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ApiKeyAndSecretKey"
                - type: object
                  required:
                    - type
                    - content
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    content:
                      type: string
                    ttl:
                      type: string
                    prio:
                      type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - id
                properties:
                  status:
                    type: string
                  id:
                    type: integer
                    format: int64
  /v3/dns/edit/{domain}/{record_id}:
    post:
      operationId: dnsEditRecordByDomainAndId
      parameters:
        - $ref: "#/components/parameters/domainPath"
        - name: record_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ApiKeyAndSecretKey"
                - type: object
                  required:
                    - type
                    - content
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    content:
                      type: string
                    ttl:
                      type: string
                    prio:
                      type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
  /v3/dns/delete/{domain}/{record_id}:
    post:
      operationId: dnsDeleteRecordByDomainAndId
      parameters:
        - $ref: "#/components/parameters/domainPath"
        - name: record_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyAndSecretKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  status:
                    type: string
  /v3/dns/retrieve/{domain}:
    post:
      operationId: dnsRetrieveRecordsByDomain
      parameters:
        - $ref: "#/components/parameters/domainPath"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyAndSecretKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - records
                properties:
                  status:
                    type: string
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/DnsRecord"
  /v3/dns/retrieve/{domain}/{record_id}:
    post:
      operationId: dnsRetrieveRecordsByDomainAndId
      parameters:
        - $ref: "#/components/parameters/domainPath"
        - name: record_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyAndSecretKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - records
                properties:
                  status:
                    type: string
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/DnsRecord"
  /v3/dns/retrieveByNameType/{domain}/{record_type}:
    post:
      operationId: dnsRetrieveRecordsByDomainAndType
      parameters:
        - $ref: "#/components/parameters/domainPath"
        - name: record_type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyAndSecretKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - records
                properties:
                  status:
                    type: string
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/DnsRecord"
  /v3/dns/retrieveByNameType/{domain}/{record_type}/{subdomain}:
    post:
      operationId: dnsRetrieveRecordsByDomainAndTypeAndSubdomain
      parameters:
        - $ref: "#/components/parameters/domainPath"
        - name: record_type
          in: path
          required: true
          schema:
            type: string
        - name: subdomain
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyAndSecretKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - records
                properties:
                  status:
                    type: string
                  records:
                    type: array
                    items:
                      $ref: "#/components/schemas/DnsRecord"
components:
  parameters:
    domainPath:
      name: domain
      in: path
      required: true
      schema:
        type: string
  schemas:
    ApiKeyAndSecretKey:
      type: object
      required:
        - apikey
        - secretapikey
      properties:
        apikey:
          type: string
        secretapikey:
          type: string
    BoolInteger:
      type: integer
    BoolString:
      type: string
    Domain:
      type: object
      required:
        - domain
        - status
        - tld
        - createDate
        - expireDate
        - securityLock
        - whoisPrivacy
        - autoRenew
        - notLocal
        - labels
      properties:
        domain:
          type: string
        status:
          type: string
        tld:
          type: string
        createDate:
          type: string
        expireDate:
          type: string
        securityLock:
          oneOf:
            - $ref: "#/components/schemas/BoolInteger"
            - $ref: "#/components/schemas/BoolString"
        whoisPrivacy:
          oneOf:
            - $ref: "#/components/schemas/BoolInteger"
            - $ref: "#/components/schemas/BoolString"
        autoRenew:
          oneOf:
            - $ref: "#/components/schemas/BoolInteger"
            - $ref: "#/components/schemas/BoolString"
        notLocal:
          oneOf:
            - $ref: "#/components/schemas/BoolInteger"
            - $ref: "#/components/schemas/BoolString"
        labels:
          type: array
          items:
            type: object
            required:
              - id
              - title
              - color
            properties:
              id:
                type: string
              title:
                type: string
              color:
                type: string
    DomainGetNameServersResponse:
      type: object
      required:
        - status
        - ns
      properties:
        status:
          type: string
        ns:
          type: array
          items:
            type: string
    DomainListAllResponse:
      type: object
      required:
        - status
        - domains
      properties:
        status:
          type: string
        domains:
          type: array
          items:
            $ref: "#/components/schemas/Domain"
    DnsRecord:
      type: object
      required:
        - id
        - name
        - type
        - content
        - ttl
        - prio
        - notes
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        content:
          type: string
        ttl:
          type: string
        prio:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
